#pragma once
// Generated by protostruct. DO NOT EDIT BY HAND!

#include "tangent/protostruct/pbwire.h"
#include "tangent/protostruct/test/test_messages.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Serialize a MyEnumA value into a buffer */
int pbemit_MyEnumA(pbwire_EmitContext* ctx, MyEnumA value);

/* Serialize a MyMessageA object into a buffer */
int pbemit_MyMessageA(pbwire_EmitContext* ctx, const MyMessageA* obj);
/* Serialize a MyMessageB object into a buffer */
int pbemit_MyMessageB(pbwire_EmitContext* ctx, const MyMessageB* obj);
/* Serialize a MyMessageC object into a buffer */
int pbemit_MyMessageC(pbwire_EmitContext* ctx, const MyMessageC* obj);

/* Deserialize a MyEnumA value from a buffer */
int pbparse_MyEnumA(pbwire_ParseContext* ctx, MyEnumA* value);

/* Deserialize a MyMessageA object from a buffer */
int pbparse_MyMessageA(pbwire_ParseContext* ctx, MyMessageA* obj);
/* Deserialize a MyMessageB object from a buffer */
int pbparse_MyMessageB(pbwire_ParseContext* ctx, MyMessageB* obj);
/* Deserialize a MyMessageC object from a buffer */
int pbparse_MyMessageC(pbwire_ParseContext* ctx, MyMessageC* obj);

/* Backend emission functions. These are included in the header as an
   implementation detail. Do not call these from user code. */
int _pbemit0_MyMessageA(pbwire_EmitContext* ctx, const MyMessageA* obj);
int _pbemit1_MyMessageA(pbwire_EmitContext* ctx, const MyMessageA* obj);
int _pbemit0_MyMessageB(pbwire_EmitContext* ctx, const MyMessageB* obj);
int _pbemit1_MyMessageB(pbwire_EmitContext* ctx, const MyMessageB* obj);
int _pbemit0_MyMessageC(pbwire_EmitContext* ctx, const MyMessageC* obj);
int _pbemit1_MyMessageC(pbwire_EmitContext* ctx, const MyMessageC* obj);

#ifdef __cplusplus
}  // extern "C"

namespace pbwire {

// Serialize a MyMessageA object into a buffer
inline int emit(pbwire_EmitContext* ctx, const MyMessageA* obj) {
  return ::pbemit_MyMessageA(ctx, obj);
}
// Serialize a MyMessageB object into a buffer
inline int emit(pbwire_EmitContext* ctx, const MyMessageB* obj) {
  return ::pbemit_MyMessageB(ctx, obj);
}
// Serialize a MyMessageC object into a buffer
inline int emit(pbwire_EmitContext* ctx, const MyMessageC* obj) {
  return ::pbemit_MyMessageC(ctx, obj);
}

// Deserialize a MyMessageA object from a buffer
inline int parse(pbwire_ParseContext* ctx, MyMessageA* obj) {
  return ::pbparse_MyMessageA(ctx, obj);
}
// Deserialize a MyMessageB object from a buffer
inline int parse(pbwire_ParseContext* ctx, MyMessageB* obj) {
  return ::pbparse_MyMessageB(ctx, obj);
}
// Deserialize a MyMessageC object from a buffer
inline int parse(pbwire_ParseContext* ctx, MyMessageC* obj) {
  return ::pbparse_MyMessageC(ctx, obj);
}

}  // namespace pbwire

#endif
