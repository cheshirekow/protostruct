load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
  name = "rules_cc",
  sha256 = "35f2fb4ea0b3e61ad64a369de284e4fbbdcdba71836a5555abb5e194cf119509",
  strip_prefix = "rules_cc-624b5d59dfb45672d4239422fa1e3de1822ee110",
  urls = [
    "https://mirror.bazel.build/github.com/bazelbuild/rules_cc/archive/624b5d59dfb45672d4239422fa1e3de1822ee110.tar.gz",
    "https://github.com/bazelbuild/rules_cc/archive/624b5d59dfb45672d4239422fa1e3de1822ee110.tar.gz",
  ],
)

# rules_java defines rules for generating Java code from Protocol Buffers.
http_archive(
  name = "rules_java",
  sha256 = "ccf00372878d141f7d5568cedc4c42ad4811ba367ea3e26bc7c43445bbc52895",
  strip_prefix = "rules_java-d7bf804c8731edd232cb061cb2a9fe003a85d8ee",
  urls = [
    "https://mirror.bazel.build/github.com/bazelbuild/rules_java/archive/d7bf804c8731edd232cb061cb2a9fe003a85d8ee.tar.gz",
    "https://github.com/bazelbuild/rules_java/archive/d7bf804c8731edd232cb061cb2a9fe003a85d8ee.tar.gz",
  ],
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "9b4ee22c250fe31b16f1a24d61467e40780a3fbb9b91c3b65be2a376ed913a1a",
    strip_prefix = "protobuf-3.13.0",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v3.13.0.tar.gz"],
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "rules_python",
    sha256 = "a30abdfc7126d497a7698c29c46ea9901c6392d6ed315171a6df5ce433aa4502",
    strip_prefix = "rules_python-0.6.0",
    url = "https://github.com/bazelbuild/rules_python/archive/0.6.0.tar.gz",
)

load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")

rules_cc_dependencies()

load(
  "@rules_java//java:repositories.bzl",
  "rules_java_dependencies",
  "rules_java_toolchains",
)

rules_java_dependencies()

rules_java_toolchains()

load(
  "@rules_proto//proto:repositories.bzl",
  "rules_proto_dependencies",
  "rules_proto_toolchains",
)

rules_proto_dependencies()
rules_proto_toolchains()

new_local_repository(
  name = "system",
  build_file = "build_tooling/bazel/system-impish.bzl",
  path = "/",
)

load("@rules_python//python:pip.bzl", "pip_install")
pip_install(
  name = "pip_deps",
  requirements = "//build_tooling:pip-requirements.txt",
)

register_toolchains("//:py_toolchain")
